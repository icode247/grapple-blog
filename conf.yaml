apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  name: grpl-custom-db
spec:
  name: grpl-custom-db
  grapis:
  - name: grpl-custom-db
    spec:
      datasources:
      - name: mycustomdb
        spec:
          mysql:
            database: blog
            host: $(host)
            name: mycustomdb
            password: $(password)
            port: $(port)
            url: ""
            user: $(username)
      discoveredrepos: true
      discoveries:
      - name: mycustomdisc
        spec:
          all: true
          dataSource: mycustomdb
          disableCamelCase: false
          schema: blog
      extraSecrets:
      - mysql-cluster-conn-credential
      ingress: true
      initContainers:
      - name: init-db
        spec:
          command:
          - bash
          - -c
          - sleep 5; while ! mysql -h $(host) -P $(port) -u $(username) -p$(password) -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; 
            curl -o test-data.sql https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql; echo;
            mysql -h $(host) -P $(port) -u $(username) -p$(password) < ./test-data.sql; rm ./test-data.sql
          image: mysql
          name: init-db
      # relations:
      # - name: employees
      #   spec:
      #     destinationModel: Employees
      #     foreignKeyName: employeesId
      #     registerInclusionResolver: true
      #     relationName: employees
      #     relationType: belongsTo
      #     sourceModel: Customers
      restcruds:
      - name: mycustomrc
        spec:
          datasource: mycustomdb
      ssl: true
      sslissuer: letsencrypt-grapple-demo
  gruims:
  - name: grpl-custom-db
    spec:
      additionalpackages: ""
      config: ""
      ssl: true
      sslissuer: letsencrypt-grapple-demo
      style: '{"colors":{"primary":{"DEFAULT":"#ff7300","fg":"#fff"},"accent":{"DEFAULT":"#808080","fg":"#fff"}}}'